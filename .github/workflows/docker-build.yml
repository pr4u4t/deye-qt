name: Build and Push Docker Image
on:
  push:
    branches:
      - main
    paths:
      - Dockerfile
      - '**/*.pro'
      - '.github/workflows/docker-build.yml'
      - '**/*.cpp'
      - '**/*.h'
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Free up disk space before we start
      - name: Free up disk space
        run: |
          echo "Disk space before cleanup:"
          df -h

          # Remove unused packages and cache
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*

          # Remove Docker images not needed for our build
          docker system prune -af

          echo "Disk space after cleanup:"
          df -h

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Read version from file
        id: version
        run: |
          # Read version and sanitize it
          VERSION=$(cat deye-data-collector/HAVERSION | tr -d '\n' | sed 's/^v//i')
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up QEMU for cross-platform builds
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Use a smaller, more specific cache
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile') }}-
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and tag step with architecture handling
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/pr4u4t/deye-qt:latest
            ghcr.io/pr4u4t/deye-qt:${{ steps.version.outputs.version }}
            ghcr.io/pr4u4t/deye-qt:${{ steps.version.outputs.version }}-amd64
            ghcr.io/pr4u4t/deye-qt:${{ steps.version.outputs.version }}-arm64
            ghcr.io/pr4u4t/deye-qt:${{ steps.version.outputs.version }}-aarch64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Efficient cache management
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Verify pushed images
        run: docker buildx imagetools inspect ghcr.io/pr4u4t/deye-qt:latest

      # Additional cleanup at the end
      - name: Final cleanup
        if: always()
        run: |
          docker system prune -af
          rm -rf /tmp/.buildx-cache-new
          echo "Final disk space:"
          df -h
