name: Build and Push Docker Image
on:
  push:
    branches:
      - main
    paths:
      - Dockerfile
      - '**/*.pro'
      - '**/*.yaml'
      - '.github/workflows/docker-build.yml'
      - '**/*.cpp'
      - '**/*.h'
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up QEMU for cross-platform builds
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/pr4u4t/deye-qt
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
            context: .
            platforms: linux/amd64,linux/arm64
            push: true
            tags: |
                ghcr.io/pr4u4t/deye-qt:latest
                ghcr.io/pr4u4t/deye-qt:amd64
                ghcr.io/pr4u4t/deye-qt:arm64
                ghcr.io/pr4u4t/deye-qt:aarch64
            cache-from: type=local,src=/tmp/.buildx-cache
            cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Verify pushed images
        run: docker buildx imagetools inspect ghcr.io/pr4u4t/deye-qt:latest
